// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YogaSix.Models;

#nullable disable

namespace YogaSix.Migrations
{
    [DbContext(typeof(YogaSixContext))]
    [Migration("20250710222110_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("YogaSix.Models.ChallengeLevel", b =>
                {
                    b.Property<string>("ChallengeLevelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ChallengeLevelId");

                    b.ToTable("ChallengeLevels");

                    b.HasData(
                        new
                        {
                            ChallengeLevelId = "B",
                            Name = "Beginner"
                        },
                        new
                        {
                            ChallengeLevelId = "I",
                            Name = "Intermediate"
                        },
                        new
                        {
                            ChallengeLevelId = "A",
                            Name = "Advanced"
                        });
                });

            modelBuilder.Entity("YogaSix.Models.YogaClass", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChallengeLevelId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClassId");

                    b.HasIndex("ChallengeLevelId");

                    b.ToTable("YogaClasses");

                    b.HasData(
                        new
                        {
                            ClassId = 1,
                            ChallengeLevelId = "B",
                            Description = "Gentle morning session",
                            Name = "Sunrise Flow",
                            Size = 20
                        },
                        new
                        {
                            ClassId = 2,
                            ChallengeLevelId = "A",
                            Description = "Intense strength-building session",
                            Name = "Power Yoga",
                            Size = 15
                        });
                });

            modelBuilder.Entity("YogaSix.Models.YogaClass", b =>
                {
                    b.HasOne("YogaSix.Models.ChallengeLevel", "ChallengeLevel")
                        .WithMany()
                        .HasForeignKey("ChallengeLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChallengeLevel");
                });
#pragma warning restore 612, 618
        }
    }
}
